Generated at: Fri Jun  6 14:34:02 KST 2025
======================================

===== PAGE COMPONENTS =====
--- src/pages/services/bug-bounty/BugBountyArena.tsx ---
// src/pages/services/bugbounty/BugBounty.tsx


interface BugBountyProgram {
  id: string;
  appName: string;
  company: string;
  platform: 'android' | 'ios' | 'web';
  description: string;
  minReward: number;
  maxReward: number;
  severity: string[];
  participants: number;
  bugsFound: number;
  status: 'active' | 'upcoming' | 'ended';
  deadline?: string;
}

const programs: BugBountyProgram[] = [
  {
    id: '1',
    appName: '쇼핑몰 앱 v2.0',
    company: 'ABC커머스',
    platform: 'android',
    description: '새로운 결제 시스템과 UI가 적용된 쇼핑몰 앱의 베타 테스트',
    minReward: 10000,
    maxReward: 500000,
    severity: ['Critical', 'High', 'Medium', 'Low'],
    participants: 145,
    bugsFound: 23,
    status: 'active',
    deadline: '2024-03-15'
  },
  {
    id: '2',
    appName: '피트니스 트래커',
    company: '헬스테크',
    platform: 'ios',
    description: '운동 기록 및 건강 관리 앱의 신규 기능 테스트',
    minReward: 20000,
    maxReward: 300000,
    severity: ['High', 'Medium', 'Low'],
    participants: 89,
    bugsFound: 12,
    status: 'active',
    deadline: '2024-03-20'
  },
  {
    id: '3',
    appName: '금융 관리 플랫폼',
    company: '핀테크솔루션',
    platform: 'web',
    description: '개인 자산 관리 웹 플랫폼의 보안 취약점 점검',
    minReward: 50000,
    maxReward: 1000000,
    severity: ['Critical', 'High'],
    participants: 234,
    bugsFound: 45,
    status: 'active',
    deadline: '2024-03-10'
  },
  {
    id: '4',
    appName: '교육 플랫폼 3.0',
    company: '에듀테크',
    platform: 'web',
    description: '온라인 학습 플랫폼의 대규모 업데이트 테스트',
    minReward: 15000,
    maxReward: 200000,
    severity: ['High', 'Medium', 'Low'],
    participants: 0,
    bugsFound: 0,
    status: 'upcoming',
    deadline: '2024-04-01'
  }
];

const BugBountyArena = () => {
  const [selectedPlatform, setSelectedPlatform] = useState<string>('all');
  const [selectedStatus, setSelectedStatus] = useState<string>('active');

  const filteredPrograms = programs.filter(program => {
    const platformMatch = selectedPlatform === 'all' || program.platform === selectedPlatform;
    const statusMatch = selectedStatus === 'all' || program.status === selectedStatus;
    return platformMatch && statusMatch;
  });

  const getPlatformIcon = (platform: string) => {
    switch (platform) {
      case 'android':
        return '🤖';
      case 'ios':
        return '🍎';
      case 'web':
        return '🌐';
      default:
        return '📱';
    }
  };

  const getStatusBadge = (status: string) => {
    switch (status) {
      case 'active':
        return 'bg-green-100 text-green-800';
      case 'upcoming':
        return 'bg-blue-100 text-blue-800';
      case 'ended':
        return 'bg-gray-100 text-gray-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'Critical':
        return 'text-red-600';
      case 'High':
        return 'text-orange-600';
      case 'Medium':
        return 'text-yellow-600';
      case 'Low':
        return 'text-green-600';
      default:
        return 'text-gray-600';
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 py-12">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* 헤더 */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-gray-900 mb-4 flex items-center justify-center">
            <Bug className="w-10 h-10 mr-3 text-red-600" />
            Bug Bounty Arena
          </h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            앱 출시 전 베타 테스터가 되어 버그를 찾고 보상을 받으세요
          </p>
        </div>

        {/* 통계 카드 */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-12">
          <div className="bg-white rounded-lg shadow p-6 text-center">
            <Trophy className="w-8 h-8 text-yellow-500 mx-auto mb-2" />
            <p className="text-3xl font-bold text-gray-900">89</p>
            <p className="text-gray-600 text-sm">총 버그 발견</p>
          </div>
          <div className="bg-white rounded-lg shadow p-6 text-center">
            <DollarSign className="w-8 h-8 text-green-500 mx-auto mb-2" />
            <p className="text-3xl font-bold text-gray-900">₩5.2M</p>
            <p className="text-gray-600 text-sm">총 보상금</p>
          </div>
          <div className="bg-white rounded-lg shadow p-6 text-center">
            <Users className="w-8 h-8 text-blue-500 mx-auto mb-2" />
            <p className="text-3xl font-bold text-gray-900">468</p>
            <p className="text-gray-600 text-sm">활동 테스터</p>
          </div>
          <div className="bg-white rounded-lg shadow p-6 text-center">
            <Target className="w-8 h-8 text-purple-500 mx-auto mb-2" />
            <p className="text-3xl font-bold text-gray-900">12</p>
            <p className="text-gray-600 text-sm">진행중 프로그램</p>
          </div>
        </div>

        {/* 필터 */}
        <div className="flex flex-col sm:flex-row gap-4 mb-8">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">플랫폼</label>
            <select
              value={selectedPlatform}
              onChange={(e) => setSelectedPlatform(e.target.value)}
              className="block w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="all">전체</option>
              <option value="android">Android</option>
              <option value="ios">iOS</option>
              <option value="web">Web</option>
            </select>
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">상태</label>
            <select
              value={selectedStatus}
              onChange={(e) => setSelectedStatus(e.target.value)}
              className="block w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="all">전체</option>
              <option value="active">진행중</option>
              <option value="upcoming">예정</option>
              <option value="ended">종료</option>
            </select>
          </div>
        </div>

        {/* 프로그램 목록 */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {filteredPrograms.map((program) => (
            <div key={program.id} className="bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow">

===== RELATED TYPES =====

===== API CALLS =====

===== STATE MANAGEMENT =====

===== CONFIGURATIONS =====
src/config/qaMentorPrompts.ts:      'bug-management': `버그 관리 프로세스를 상담합니다.

===== SUMMARY =====
Components found:
       1

API endpoints used:
